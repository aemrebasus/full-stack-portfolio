{"version":3,"sources":["./src/pma-app/shared/tdialog/dialog/dialog.component.ts","./src/pma-app/shared/tdialog/dialog/dialog.component.html","./src/pma-app/shared/tdialog/tdialog.module.ts"],"names":[],"mappings":"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","file":"shared-tdialog-tdialog-module-es2015.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { IConfirmationResult } from '@shared/tconfirmation/confirm/confirm.interfaces';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n\n  readonly name = 'name';\n\n  @Input() config: any;\n\n\n  form: FormGroup = new FormGroup({});\n\n\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe(data => {\n\n      this.config = data.resolved;\n      this.form.addControl(this.name, new FormControl(''));\n\n    });\n\n  }\n\n\n  confirm(event: IConfirmationResult) {\n\n    /**\n     * THis component is used only for opening a project (for now)\n     * only open-event consumed!\n     */\n\n    if (event.status) {\n      if (event.type === 'open') {\n\n        this.onSubmit(event);\n\n      } else if (event.type === 'close') {\n\n        this.router.navigate(['/pma']);\n\n      } else if (event.type === 'delete') {\n\n        this.onSubmit(event);\n\n      }\n    }\n  }\n\n\n  onSubmit(event: IConfirmationResult) {\n    try {\n\n      this.config.events.submit({\n        type: 'submit',\n        paylaod: this.form.value\n      });\n\n    } catch (err) {\n\n    } finally {\n\n      this.router.navigate(['/pma']);\n\n    }\n  }\n\n\n  submitType() {\n    return `#${this.submitLabel().split(' ')[0].toLowerCase()}`;\n  }\n\n  meta() {\n    return this.config.meta;\n  }\n\n  submitLabel() {\n    return this.config.meta.submitLabel;\n  }\n  bgColor() {\n    return this.meta().bgColor;\n  }\n\n  textColor() {\n    return this.meta().textColor;\n  }\n\n  title() {\n    return this.meta().title;\n  }\n\n  data() {\n    return this.config.data;\n  }\n\n\n}\n\n\n","<app-modal-wrapper [bgColor]=\"bgColor()\" [title]=\"title() | titlecase\" [textColor]=\"textColor()\"\n    (confirmEvent)=\"confirm($event)\">\n\n    <form [formGroup]=\"form\">\n\n        <div class=\"form-group\">\n            <input [formControlName]=\"name\" type=\"text\" [id]=\"name\" class=\"form-control\" list=\"data\" placeholder=\"....\"\n                required />\n            <datalist id=\"data\">\n                <option *ngFor=\"let o of data()\" [value]=\"o.name | titlecase\"></option>\n            </datalist>\n        </div>\n\n        <button class=\"btn btn-{{bgColor()}} mr-2\" type=\"button\" *ngIf=\"form.valid && form.dirty\" data-toggle=\"modal\"\n            [attr.data-target]=\"submitType()\"> {{submitLabel()}} </button>\n    </form>\n\n</app-modal-wrapper>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { RouterModule } from '@angular/router';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TmodalModule } from '@shared/tmodal/tmodal.module';\n\n\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [\n    CommonModule,\n    TmodalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: DialogComponent }])\n  ],\n  exports: [\n    DialogComponent\n  ]\n})\nexport class TdialogModule { }\n"],"sourceRoot":"webpack:///"}