{"version":3,"sources":["./src/pma-app/shared/tconfirmation/confirm/confirm.component.ts","./src/pma-app/shared/tconfirmation/confirm/confirm.component.html","./src/pma-app/shared/tconfirmation/confirm/confirm.interfaces.ts","./src/pma-app/shared/tconfirmation/tconfirmation.module.ts","./src/pma-app/shared/tmodal/modal-wrapper/modal-wrapper.component.ts","./src/pma-app/shared/tmodal/modal-wrapper/modal-wrapper.component.html","./src/pma-app/shared/tmodal/tmodal.module.ts"],"names":[],"mappings":"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","file":"default~shared-tdialog-tdialog-module~shared-tform-tform-module-es2015.js","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { IConfirmationResult, IConfirmMeta } from './confirm.interfaces';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  @Input() meta: IConfirmMeta = {};\n\n  @Output() response = new EventEmitter<IConfirmationResult>();\n\n  bgColor;\n  textColor;\n\n  // Add the event name to the first array in the colorMap.\n  colorMap = [\n    [['save', 'open'], ['success', 'white']],\n    [['edit', 'back', 'close', 'reset', 'update'], ['warning', 'dark']],\n    [['delete'], ['danger', 'white']]\n  ];\n\n  ngOnInit(): void {\n    [this.bgColor, this.textColor] = this.colorMap.find(e => e[0].includes(this.meta.type))[1];\n  }\n\n  confirm() {\n    this.response.emit({\n      type: this.meta.type,\n      status: true,\n      message: `${this.meta.type} operation confirmed!`\n    });\n  }\n\n  cancel() {\n    this.response.emit({\n      type: this.meta.type,\n      status: false,\n      message: `${this.meta.type} operation canceled!`\n    });\n  }\n}\n\n\n","<div class=\"modal fade\" id={{meta.id}} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"id\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-{{bgColor}} text-{{textColor}} d-flex flex-row justify-content-between\">\n                <h5 class=\"modal-title\">{{meta.title}}</h5>\n                <a type=\"button\" class=\"btn\" data-dismiss=\"modal\">\n                    <i class=\"fa fa-times-circle text-{{textColor}}\"></i>\n                </a>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"container-fluid\">\n                    {{meta.message}}\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"\n                    (click)=\"cancel()\">{{meta.cancelLabel}}</button>\n                    \n                <button type=\"button\" class=\"btn btn-{{bgColor}} text-{{textColor}}\" (click)=\"confirm()\"\n                    data-dismiss=\"modal\">{{meta.confirmLabel}}</button>\n            </div>\n        </div>\n    </div>\n</div>","\r\nexport type IConfirmationType = 'save' | 'delete' | 'edit' | 'update' | 'back' | 'cancel' | 'close' | 'reset' | 'open';\r\n\r\nexport interface IConfirmMeta {\r\n    id?: string;\r\n    type?: IConfirmationType;\r\n    title?: string;\r\n    message?: string;\r\n    confirmLabel?: string;\r\n    cancelLabel?: string;\r\n}\r\n\r\nexport interface IConfirmationResult {\r\n    type?: IConfirmationType;\r\n    status?: boolean;\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * Confirmation modal for each operation;\r\n */\r\nexport class ConfirmationMetas {\r\n    static all() {\r\n        return [\r\n            ConfirmationMetas.delete(),\r\n            ConfirmationMetas.save(),\r\n            ConfirmationMetas.back(),\r\n            ConfirmationMetas.edit(),\r\n            ConfirmationMetas.close(),\r\n            ConfirmationMetas.reset(),\r\n            ConfirmationMetas.open(),\r\n            ConfirmationMetas.update(),\r\n\r\n        ];\r\n    }\r\n    static delete() {\r\n\r\n        const deleteConfirmation: IConfirmMeta = {\r\n            id: 'delete',\r\n            type: 'delete',\r\n            title: 'Confirmation of Deleting',\r\n            cancelLabel: 'Cancel',\r\n            confirmLabel: 'Confirm',\r\n            message: 'Would you like to delete the item?',\r\n        };\r\n\r\n        return deleteConfirmation;\r\n    }\r\n\r\n    static edit() {\r\n\r\n        const editConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'edit',\r\n            type: 'edit',\r\n            title: 'Confirmation of Updating',\r\n            message: 'Would you like to edit the item?',\r\n        };\r\n        return editConfirmation;\r\n    }\r\n    static update() {\r\n\r\n        const editConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'update',\r\n            type: 'update',\r\n            title: 'Confirmation of Updating',\r\n            message: 'Would you like to update the item?',\r\n        };\r\n        return editConfirmation;\r\n    }\r\n\r\n    static save() {\r\n\r\n        const saveConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'save',\r\n            type: 'save',\r\n            title: 'Confirmation of Saving',\r\n            message: 'Would you like to save the item?',\r\n        };\r\n        return saveConfirmation;\r\n    }\r\n\r\n    static close() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'close',\r\n            type: 'close',\r\n            title: 'Closing Dialog',\r\n            message: 'You will lose the form data!',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static back() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'back',\r\n            type: 'back',\r\n            title: 'Closing Dialog',\r\n            message: 'You will lose the form data!',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static reset() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'reset',\r\n            type: 'reset',\r\n            title: 'Reseting Form',\r\n            message: 'Would you like to reset the form?',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static open() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'open',\r\n            type: 'open',\r\n            title: 'Openning',\r\n            message: 'Would you like to open it?',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmComponent } from './confirm/confirm.component';\n\n\n\n@NgModule({\n  declarations: [\n    ConfirmComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ConfirmComponent\n  ]\n})\nexport class TconfirmationModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IConfirmMeta, ConfirmationMetas, IConfirmationResult } from '@shared/tconfirmation/confirm/confirm.interfaces';\n\n@Component({\n  selector: 'app-modal-wrapper',\n  templateUrl: './modal-wrapper.component.html',\n  styleUrls: ['./modal-wrapper.component.scss']\n})\nexport class ModalWrapperComponent implements OnInit {\n\n  @Input() bgColor = 'Secondary';\n  @Input() textColor = 'white';\n  @Input() title = 'No Title (bgColor? textColor? title?)';\n  @Output() confirmEvent = new EventEmitter();\n\n\n  confirmationMetas: IConfirmMeta[] = ConfirmationMetas.all();\n\n\n  ngOnInit(): void {\n  }\n\n  closeOutlet() {\n\n  }\n\n  confirm(event: IConfirmationResult) {\n    this.confirmEvent.emit(event);\n  }\n\n\n}\n","<div class=\"modal-wrapper pt-5\">\n    <div class=\"row col-md-12 pt-5\">\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-4 pt-5\">\n            <div class=\"card\">\n                <div class=\"card-header bg-{{bgColor}} d-flex flex-row justify-content-between\">\n                    <h3 class=\"card-title text-{{textColor}}\">{{title}}</h3>\n\n                    <button type=\"button\" class=\"btn\" data-toggle=\"modal\" data-target=\"#close\">\n                        <i class=\"fa fa-times-circle text-{{textColor}}\"></i>\n                    </button>\n                </div>\n                <div class=\"card-body\">\n\n                    <!-- Confirmation Modals... -->\n                    <app-confirm [meta]=\"cm\" (response)=\"confirm($event)\"\n                        *ngFor=\"let cm of confirmationMetas\">\n                    </app-confirm>\n\n\n                    <ng-content> </ng-content>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalWrapperComponent } from './modal-wrapper/modal-wrapper.component';\nimport { TconfirmationModule } from '@shared/tconfirmation/tconfirmation.module';\n\n\n\n@NgModule({\n  declarations: [ModalWrapperComponent],\n  imports: [\n    CommonModule,\n    TconfirmationModule\n  ],\n  exports: [\n    ModalWrapperComponent\n  ]\n})\nexport class TmodalModule { }\n"],"sourceRoot":"webpack:///"}