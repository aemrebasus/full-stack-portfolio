{"version":3,"sources":["./src/pma-app/consts.ts","./src/pma-app/services/common/router.control.ts","./src/pma-app/shared/tform/reactive-form/reactive-form.component.ts","./src/pma-app/shared/tform/reactive-form/reactive-form.component.html","./src/pma-app/shared/tform/tform.module.ts","./src/pma-app/shared/tform/wait/wait-for.pipe.ts"],"names":[],"mappings":"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","file":"shared-tform-tform-module-es2015.js","sourcesContent":["export const BASE_URL = '/pma';\r\n\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { BASE_URL } from '@pma/consts';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class RouterControl {\r\n\r\n    constructor(private router: Router, private route: ActivatedRoute) { }\r\n\r\n    navigateHome() {\r\n        this.router.navigate([BASE_URL]);\r\n    }\r\n}\r\n\r\n","import { FormControl, FormGroup, ValidationErrors } from '@angular/forms';\nimport { IFormController } from './reactive-form.interfaces';\nimport { Component, Input, OnInit, } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { IConfirmMeta, ConfirmationMetas, IConfirmationResult } from '@shared/tconfirmation/confirm/confirm.interfaces';\nimport { RouterControl } from '@pma-services/common/router.control';\n\n@Component({\n  selector: 'app-reactive-form',\n  templateUrl: './reactive-form.component.html',\n  styleUrls: ['./reactive-form.component.scss']\n})\nexport class ReactiveFormComponent implements IFormController, OnInit {\n\n  /**\n   * Contains confirmation messages\n   */\n  confirmationMetas: IConfirmMeta[] = ConfirmationMetas.all();\n\n  /**\n   * Forms' title, controls, controls'validators etc.\n   */\n  @Input() config: any;\n\n\n  /**\n   * Form that comminicates with the template.\n   */\n  @Input() form: FormGroup;\n\n\n  constructor(private routerControl: RouterControl, private route: ActivatedRoute) { }\n\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe(result => {\n      this.config = result.resolved;\n    });\n\n\n    this.form = new FormGroup({});\n\n\n    this.config.inputs.forEach(input => {\n\n      const control = new FormControl('', input.validators);\n\n      this.form.addControl(input.name, control);\n\n      this.disableIdField(input.name);\n    });\n\n\n    for (let e of Object.keys(this.config.data)) {\n      if (e !== 'meta') {\n        this.getControl(e).setValue(this.config.data[e]);\n      }\n    }\n\n\n  }\n\n  disableIdField(name: string) {\n    if (name.toLowerCase() === 'id') {\n      this.getControl(name).disable();\n    }\n  }\n\n  /**\n   * template helpers\n   */\n  submitLabel() {\n    return this.config.meta.submitLabel;\n  }\n\n  // Helper for comfirmatoin | converts the submit label to the selector for Confirmation modal so that when use clicks the submit button \n  // corresboding Modal shows up.\n  submitType() {\n    return `#${this.submitLabel().split(' ')[0].toLowerCase()}`;\n  }\n\n  isFormValid() {\n    return this.form.valid && this.form.dirty;\n  }\n  isDirty() {\n    return this.form.dirty;\n  }\n\n  bgColor() {\n    return this.config.meta.bgColor;\n  }\n  title() {\n    return this.config.meta.title || this.config.meta.name;\n  }\n\n  inputs() {\n    return this.config.inputs;\n  }\n\n\n  // Form controller Access\n  getControl(controlName: string): FormControl {\n    return this.form.controls[controlName] as FormControl;\n  }\n\n  value(controlName: string) {\n    return this.getControl(controlName).value;\n  }\n\n  setControlValue(controlName: string, value: string | number) {\n    try {\n      this.getControl(controlName).setValue(value);\n    } catch (err) {\n      throw new Error(`Could not find the field with the name ${controlName}`);\n    }\n  }\n\n\n  getControlValue(controlname: string) {\n    return this.getControl(controlname).value;\n  }\n\n  valid(name: string): boolean {\n\n    const c = this.getControl(name);\n    return c.valid && (c.touched && c.dirty);\n  }\n\n  invalid(name: string): boolean {\n    const c = this.getControl(name);\n    return c.invalid && (c.touched && c.dirty);\n  }\n\n\n  /**\n   * return the validation result of the control\n   * @param controlName contol name\n   */\n  errors(controlName: string): ValidationErrors {\n    return this.getControl(controlName).errors;\n  }\n  // Form Controller Acess\n\n\n\n\n\n\n\n  // confirmation\n  confirm(event: IConfirmationResult) {\n    if (event.status) {\n\n      switch (event.type) {\n        case 'back': this.onBack(event); break;\n        case 'reset': this.onReset(event); break;\n        case 'cancel': this.onBack(event); break;\n        case 'close': this.onBack(event); break;\n        case 'save': this.onSubmit(event); break;\n        case 'delete': this.onDelete(event); break;\n        case 'update': this.onSubmit(event); break;\n      }\n\n\n    }\n\n  }\n\n  // Event handlers\n  onSubmit(event: IConfirmationResult) {\n    try {\n\n      this.config.events.submit({\n        type: 'submit',\n        paylaod: this.form.value\n      });\n      console.log(this.form.value);\n\n    } catch (err) {\n      // do nothing\n    } finally {\n\n      this.backHome();\n    }\n\n\n\n  }\n\n  onDelete(event: IConfirmationResult) {\n    try {\n      this.config.events.submit({\n        type: 'delete',\n        paylaod: this.form.value\n      });\n    } catch (err) {\n      // do nothing...\n    } finally {\n      this.backHome();\n    }\n  }\n\n\n\n  onBack(event: IConfirmationResult) {\n    try {\n      this.config.events.submit({\n        type: 'back',\n        paylaod: this.form.value\n      });\n    } catch (err) {\n      // do nothing...\n    } finally {\n      this.backHome();\n    }\n\n  }\n\n  onReset(event: IConfirmationResult) {\n\n    try {\n      this.config.events.submit({\n        type: 'reset',\n        paylaod: this.form.value\n      });\n    } catch (err) {\n\n      // do nothing.\n\n    } finally {\n      Object.entries(this.form.controls).forEach(e => {\n        this.form.controls[e[0]].reset('', { invalid: null, valid: null, dirty: null, touched: null });\n      });\n    }\n  }\n\n  backHome() {\n    this.routerControl.navigateHome();\n  }\n\n}\n\n","<app-modal-wrapper [bgColor]=\"bgColor()\" [title]=\"title()\" (confirmEvent)=\"confirm($event)\">\n    <div class=\"card-body bg-info\">\n        {{form.value | json}}\n    </div>\n\n    <form [formGroup]=\"form\">\n\n        <div class=\"form-group\" *ngFor=\"let input of inputs()\">\n\n\n            <label for={{input.name}}>{{input.label | titlecase}}</label>\n\n            <input [formControlName]=\"input.name\" type=\"text\" [id]=\"input.name\" class=\"form-control\"\n                [class.is-invalid]=\"invalid(input.name)\" [class.is-valid]=\"valid(input.name)\"\n                [placeholder]=\"input.placeholder | titlecase\" autocomplete=\"off\"/>\n\n            <small class=\"form-text text-muted\">{{input.helperText}}</small>\n\n            <!-- Validaton Errors  -->\n            <div *ngIf=\"invalid(input.name)\" class=\"alert alert-danger\">\n\n                <div *ngIf=\"errors(input.name).required\">\n                    {{input.name | titlecase}} is required.\n                </div>\n\n                <div *ngIf=\"errors(input.name).minLength\">\n                    {{input.name | titlecase}} does not meet the minimum-length requirement.\n                </div>\n\n                <div *ngIf=\"errors(input.name).forbiddenName\">\n                    {{value(input.name | titlecase)}} is not allowed .\n                </div>\n\n                <div *ngIf=\"errors(input.name).NaN\">\n                    {{value(input.name | titlecase)}} is not a number .\n                </div>\n\n                <div *ngIf=\"errors(input.name).email\">\n                    {{value(input.name)}} is not an email .\n                </div>\n\n\n                <!-- Add any validation error message here -->\n            </div>\n\n        </div>\n\n\n    </form>\n\n    <button class=\"btn btn-dark mr-2\" data-toggle=\"modal\" data-target=\"#back\">\n        <i class=\"fa fa-arrow-left\" aria-hidden=\"true\"></i>\n        Back\n    </button>\n\n    <button class=\"btn btn-dark mr-2\" type=\"button\" data-toggle=\"modal\" data-target=\"#reset\" *ngIf=\"isDirty()\">\n        <i class=\"fa fa-trash\" aria-hidden=\"true\"></i>\n        Reset form\n    </button>\n\n    <button class=\"btn btn-warning mr-2\" type=\"button\" data-toggle=\"modal\" *ngIf=\"isFormValid()\" [attr.data-target]=\"submitType()\">\n        {{submitLabel() | titlecase}}\n    </button>\n\n</app-modal-wrapper>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormComponent } from './reactive-form/reactive-form.component';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { TmodalModule } from '../tmodal/tmodal.module';\nimport { WaitForPipe } from './wait/wait-for.pipe';\nimport { TconfirmationModule } from '@shared/tconfirmation/tconfirmation.module';\n\n\n\n\n@NgModule({\n  declarations: [\n    ReactiveFormComponent,\n    WaitForPipe\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    FormsModule,\n    TconfirmationModule,\n    TmodalModule,\n    RouterModule.forChild([\n      { path: '', component: ReactiveFormComponent }\n    ])\n  ]\n})\nexport class TformModule { }\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'waitFor'\n})\nexport class WaitForPipe implements PipeTransform {\n\n  transform(value: any, wait: number): any {\n    return new Promise((res, rej) => [\n      setTimeout(() => {\n        res(value);\n      }, wait)\n    ]);\n  }\n\n}\n"],"sourceRoot":"webpack:///"}