{"version":3,"sources":["webpack:///src/pma-app/shared/tconfirmation/confirm/confirm.component.ts","webpack:///src/pma-app/shared/tconfirmation/confirm/confirm.component.html","webpack:///src/pma-app/shared/tconfirmation/confirm/confirm.interfaces.ts","webpack:///src/pma-app/shared/tconfirmation/tconfirmation.module.ts","webpack:///src/pma-app/shared/tmodal/modal-wrapper/modal-wrapper.component.ts","webpack:///src/pma-app/shared/tmodal/modal-wrapper/modal-wrapper.component.html","webpack:///src/pma-app/shared/tmodal/tmodal.module.ts"],"names":["ConfirmComponent","meta","response","colorMap","find","e","includes","type","bgColor","textColor","emit","status","message","cancel","confirm","id","selector","templateUrl","styleUrls","ConfirmationMetas","save","back","edit","close","reset","open","update","deleteConfirmation","title","cancelLabel","confirmLabel","editConfirmation","saveConfirmation","closeConfirmation","TconfirmationModule","declarations","imports","exports","ModalWrapperComponent","confirmEvent","confirmationMetas","all","event","TmodalModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaA,gB;;;AALb;AAAA;;AAOW,aAAAC,IAAA,GAAqB,EAArB;AAEC,aAAAC,QAAA,GAAW,IAAI,0DAAJ,EAAX,CATZ,CAcE;;AACA,aAAAC,QAAA,GAAW,CACT,CAAC,CAAC,MAAD,EAAS,MAAT,CAAD,EAAmB,CAAC,SAAD,EAAY,OAAZ,CAAnB,CADS,EAET,CAAC,CAAC,MAAD,EAAS,MAAT,EAAiB,OAAjB,EAA0B,OAA1B,EAAmC,QAAnC,CAAD,EAA+C,CAAC,SAAD,EAAY,MAAZ,CAA/C,CAFS,EAGT,CAAC,CAAC,QAAD,CAAD,EAAa,CAAC,QAAD,EAAW,OAAX,CAAb,CAHS,CAAX;AAyBD;;;;mCAnBS;AAAA;;AAAA,oDAC2B,KAAKA,QAAL,CAAcC,IAAd,CAAmB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC,CAAD,CAAD,CAAKC,QAAL,CAAc,KAAI,CAACL,IAAL,CAAUM,IAAxB,CAAJ;AAAA,WAApB,EAAuD,CAAvD,CAD3B;;AACL,eAAKC,OADA;AACS,eAAKC,SADd;AAEP;;;kCAES;AACR,eAAKP,QAAL,CAAcQ,IAAd,CAAmB;AACjBH,gBAAI,EAAE,KAAKN,IAAL,CAAUM,IADC;AAEjBI,kBAAM,EAAE,IAFS;AAGjBC,mBAAO,YAAK,KAAKX,IAAL,CAAUM,IAAf;AAHU,WAAnB;AAKD;;;iCAEQ;AACP,eAAKL,QAAL,CAAcQ,IAAd,CAAmB;AACjBH,gBAAI,EAAE,KAAKN,IAAL,CAAUM,IADC;AAEjBI,kBAAM,EAAE,KAFS;AAGjBC,mBAAO,YAAK,KAAKX,IAAL,CAAUM,IAAf;AAHU,WAAnB;AAKD;;;;;;;uBAlCUP,gB;AAAgB,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,wd;AAAA;AAAA;ACR7B;;AACI;;AACI;;AACI;;AACI;;AAAwB;;AAAc;;AACtC;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;;AACJ;;AACJ;;AACA;;AACI;;AACI;AAAA,mBAAS,IAAAa,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAoB;;AAE3C;;AAAqE;AAAA,mBAAS,IAAAC,OAAA,EAAT;AAAkB,WAAlB;;AAC5C;;AAAqB;;AAClD;;AACJ;;AACJ;;AACJ;;;;AAvBwB,6FAAAC,EAAA;;AAGP;;AAAA;;AACuB;;AAAA;;AAEjB;;AAAA;;AAKH;;AAAA;;AAKmB;;AAAA;;AAED;;AAAA;;AACG;;AAAA;;;;;;;;sEDX5Bf,gB,EAAgB;cAL5B,uDAK4B;eALlB;AACTgB,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAKkB,Q;;gBAE1B;;;gBAEA;;;;;;;;;;;;;;;;;;;;AEMH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;QAGaC,iB;;;;;;;;;8BACI;AACT,iBAAO,CACHA,iBAAiB,UAAjB,EADG,EAEHA,iBAAiB,CAACC,IAAlB,EAFG,EAGHD,iBAAiB,CAACE,IAAlB,EAHG,EAIHF,iBAAiB,CAACG,IAAlB,EAJG,EAKHH,iBAAiB,CAACI,KAAlB,EALG,EAMHJ,iBAAiB,CAACK,KAAlB,EANG,EAOHL,iBAAiB,CAACM,IAAlB,EAPG,EAQHN,iBAAiB,CAACO,MAAlB,EARG,CAAP;AAWH;;;kCACe;AAEZ,cAAMC,kBAAkB,GAAiB;AACrCZ,cAAE,EAAE,QADiC;AAErCR,gBAAI,EAAE,QAF+B;AAGrCqB,iBAAK,EAAE,0BAH8B;AAIrCC,uBAAW,EAAE,QAJwB;AAKrCC,wBAAY,EAAE,SALuB;AAMrClB,mBAAO,EAAE;AAN4B,WAAzC;AASA,iBAAOe,kBAAP;AACH;;;+BAEa;AAEV,cAAMI,gBAAgB,mCACfZ,iBAAiB,UAAjB,EADe,GACW;AAC7BJ,cAAE,EAAE,MADyB;AAE7BR,gBAAI,EAAE,MAFuB;AAG7BqB,iBAAK,EAAE,0BAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADX,CAAtB;AAOA,iBAAOmB,gBAAP;AACH;;;iCACe;AAEZ,cAAMA,gBAAgB,mCACfZ,iBAAiB,UAAjB,EADe,GACW;AAC7BJ,cAAE,EAAE,QADyB;AAE7BR,gBAAI,EAAE,QAFuB;AAG7BqB,iBAAK,EAAE,0BAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADX,CAAtB;AAOA,iBAAOmB,gBAAP;AACH;;;+BAEa;AAEV,cAAMC,gBAAgB,mCACfb,iBAAiB,UAAjB,EADe,GACW;AAC7BJ,cAAE,EAAE,MADyB;AAE7BR,gBAAI,EAAE,MAFuB;AAG7BqB,iBAAK,EAAE,wBAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADX,CAAtB;AAOA,iBAAOoB,gBAAP;AACH;;;gCAEc;AACX,cAAMC,iBAAiB,mCAChBd,iBAAiB,UAAjB,EADgB,GACU;AAC7BJ,cAAE,EAAE,OADyB;AAE7BR,gBAAI,EAAE,OAFuB;AAG7BqB,iBAAK,EAAE,gBAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADV,CAAvB;AAOA,iBAAOqB,iBAAP;AACH;;;+BAEa;AACV,cAAMA,iBAAiB,mCAChBd,iBAAiB,UAAjB,EADgB,GACU;AAC7BJ,cAAE,EAAE,MADyB;AAE7BR,gBAAI,EAAE,MAFuB;AAG7BqB,iBAAK,EAAE,gBAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADV,CAAvB;AAOA,iBAAOqB,iBAAP;AACH;;;gCAEc;AACX,cAAMA,iBAAiB,mCAChBd,iBAAiB,UAAjB,EADgB,GACU;AAC7BJ,cAAE,EAAE,OADyB;AAE7BR,gBAAI,EAAE,OAFuB;AAG7BqB,iBAAK,EAAE,eAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADV,CAAvB;AAOA,iBAAOqB,iBAAP;AACH;;;+BAEa;AACV,cAAMA,iBAAiB,mCAChBd,iBAAiB,UAAjB,EADgB,GACU;AAC7BJ,cAAE,EAAE,MADyB;AAE7BR,gBAAI,EAAE,MAFuB;AAG7BqB,iBAAK,EAAE,UAHsB;AAI7BhB,mBAAO,EAAE;AAJoB,WADV,CAAvB;AAOA,iBAAOqB,iBAAP;AACH;;;;;;;;;;;;;;;;;;;;;AC9HL;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBaC,mB;;;;;YAAAA;;;;yBAAAA,mB;AAAmB,O;AAAA,gBAPrB,CACP,4DADO,CAOqB;;;;0HAAnBA,mB,EAAmB;AAAA,uBAT5B,2EAS4B;AATZ,kBAGhB,4DAHgB,CASY;AANhB,kBAGZ,2EAHY;AAMgB,O;AAHZ,K;;;;;sEAGPA,mB,EAAmB;cAX/B,sDAW+B;eAXtB;AACRC,sBAAY,EAAE,CACZ,2EADY,CADN;AAIRC,iBAAO,EAAE,CACP,4DADO,CAJD;AAORC,iBAAO,EAAE,CACP,2EADO;AAPD,S;AAWsB,Q;;;;;;;;;;;;;;;;;;ACjBhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACeoB;;AAAyB;AAAA;;AAAA;;AAAA;AAAA;;AAEzB;;;;;;AAFa;;;;;;QDPpBC,qB;;;AALb;AAAA;;AAOW,aAAA9B,OAAA,GAAU,WAAV;AACA,aAAAC,SAAA,GAAY,OAAZ;AACA,aAAAmB,KAAA,GAAQ,uCAAR;AACC,aAAAW,YAAA,GAAe,IAAI,0DAAJ,EAAf;AAGV,aAAAC,iBAAA,GAAoC,mGAAkBC,GAAlB,EAApC;AAeD;;;;mCAZS,CACP;;;sCAEa,CAEb;;;gCAEOC,K,EAA4B;AAClC,eAAKH,YAAL,CAAkB7B,IAAlB,CAAuBgC,KAAvB;AACD;;;;;;;uBApBUJ,qB;AAAqB,K;;;YAArBA,qB;AAAqB,wC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,e;AAAA,c;AAAA,8S;AAAA;AAAA;;;ACRlC;;AACI;;AACI;;AACA;;AACI;;AACI;;AACI;;AAA0C;;AAAS;;AAEnD;;AACI;;AACJ;;AACJ;;AACA;;AAGI;;AAKA;;AAEJ;;AACJ;;AACJ;;AACA;;AACJ;;AACJ;;;;AAtBqB;;AAAA;;AACG;;AAAA;;AAAsC;;AAAA;;AAGnC;;AAAA;;AAOH;;AAAA;;;;;;;;;sEDRXA,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTtB,kBAAQ,EAAE,mBADD;AAETC,qBAAW,EAAE,gCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKuB,Q;;gBAE/B;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAiBayB,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBARd,CACP,4DADO,EAEP,8FAFO,CAQc;;;;0HAAZA,Y,EAAY;AAAA,uBATR,4FASQ;AATa,kBAElC,4DAFkC,EAGlC,8FAHkC,CASb;AANF,kBAGnB,4FAHmB;AAME,O;AAHA,K;;;;;sEAGZA,Y,EAAY;cAVxB,sDAUwB;eAVf;AACRR,sBAAY,EAAE,CAAC,4FAAD,CADN;AAERC,iBAAO,EAAE,CACP,4DADO,EAEP,8FAFO,CAFD;AAMRC,iBAAO,EAAE,CACP,4FADO;AAND,S;AAUe,Q","file":"default~shared-tdialog-tdialog-module~shared-tform-tform-module-es5.js","sourcesContent":["import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nimport { IConfirmationResult, IConfirmMeta } from './confirm.interfaces';\n\n@Component({\n  selector: 'app-confirm',\n  templateUrl: './confirm.component.html',\n  styleUrls: ['./confirm.component.scss']\n})\nexport class ConfirmComponent implements OnInit {\n\n  @Input() meta: IConfirmMeta = {};\n\n  @Output() response = new EventEmitter<IConfirmationResult>();\n\n  bgColor;\n  textColor;\n\n  // Add the event name to the first array in the colorMap.\n  colorMap = [\n    [['save', 'open'], ['success', 'white']],\n    [['edit', 'back', 'close', 'reset', 'update'], ['warning', 'dark']],\n    [['delete'], ['danger', 'white']]\n  ];\n\n  ngOnInit(): void {\n    [this.bgColor, this.textColor] = this.colorMap.find(e => e[0].includes(this.meta.type))[1];\n  }\n\n  confirm() {\n    this.response.emit({\n      type: this.meta.type,\n      status: true,\n      message: `${this.meta.type} operation confirmed!`\n    });\n  }\n\n  cancel() {\n    this.response.emit({\n      type: this.meta.type,\n      status: false,\n      message: `${this.meta.type} operation canceled!`\n    });\n  }\n}\n\n\n","<div class=\"modal fade\" id={{meta.id}} tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"id\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\" role=\"document\">\n        <div class=\"modal-content\">\n            <div class=\"modal-header bg-{{bgColor}} text-{{textColor}} d-flex flex-row justify-content-between\">\n                <h5 class=\"modal-title\">{{meta.title}}</h5>\n                <a type=\"button\" class=\"btn\" data-dismiss=\"modal\">\n                    <i class=\"fa fa-times-circle text-{{textColor}}\"></i>\n                </a>\n            </div>\n            <div class=\"modal-body\">\n                <div class=\"container-fluid\">\n                    {{meta.message}}\n                </div>\n            </div>\n            <div class=\"modal-footer\">\n                <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"\n                    (click)=\"cancel()\">{{meta.cancelLabel}}</button>\n                    \n                <button type=\"button\" class=\"btn btn-{{bgColor}} text-{{textColor}}\" (click)=\"confirm()\"\n                    data-dismiss=\"modal\">{{meta.confirmLabel}}</button>\n            </div>\n        </div>\n    </div>\n</div>","\r\nexport type IConfirmationType = 'save' | 'delete' | 'edit' | 'update' | 'back' | 'cancel' | 'close' | 'reset' | 'open';\r\n\r\nexport interface IConfirmMeta {\r\n    id?: string;\r\n    type?: IConfirmationType;\r\n    title?: string;\r\n    message?: string;\r\n    confirmLabel?: string;\r\n    cancelLabel?: string;\r\n}\r\n\r\nexport interface IConfirmationResult {\r\n    type?: IConfirmationType;\r\n    status?: boolean;\r\n    message?: string;\r\n}\r\n\r\n/**\r\n * Confirmation modal for each operation;\r\n */\r\nexport class ConfirmationMetas {\r\n    static all() {\r\n        return [\r\n            ConfirmationMetas.delete(),\r\n            ConfirmationMetas.save(),\r\n            ConfirmationMetas.back(),\r\n            ConfirmationMetas.edit(),\r\n            ConfirmationMetas.close(),\r\n            ConfirmationMetas.reset(),\r\n            ConfirmationMetas.open(),\r\n            ConfirmationMetas.update(),\r\n\r\n        ];\r\n    }\r\n    static delete() {\r\n\r\n        const deleteConfirmation: IConfirmMeta = {\r\n            id: 'delete',\r\n            type: 'delete',\r\n            title: 'Confirmation of Deleting',\r\n            cancelLabel: 'Cancel',\r\n            confirmLabel: 'Confirm',\r\n            message: 'Would you like to delete the item?',\r\n        };\r\n\r\n        return deleteConfirmation;\r\n    }\r\n\r\n    static edit() {\r\n\r\n        const editConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'edit',\r\n            type: 'edit',\r\n            title: 'Confirmation of Updating',\r\n            message: 'Would you like to edit the item?',\r\n        };\r\n        return editConfirmation;\r\n    }\r\n    static update() {\r\n\r\n        const editConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'update',\r\n            type: 'update',\r\n            title: 'Confirmation of Updating',\r\n            message: 'Would you like to update the item?',\r\n        };\r\n        return editConfirmation;\r\n    }\r\n\r\n    static save() {\r\n\r\n        const saveConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'save',\r\n            type: 'save',\r\n            title: 'Confirmation of Saving',\r\n            message: 'Would you like to save the item?',\r\n        };\r\n        return saveConfirmation;\r\n    }\r\n\r\n    static close() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'close',\r\n            type: 'close',\r\n            title: 'Closing Dialog',\r\n            message: 'You will lose the form data!',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static back() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'back',\r\n            type: 'back',\r\n            title: 'Closing Dialog',\r\n            message: 'You will lose the form data!',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static reset() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'reset',\r\n            type: 'reset',\r\n            title: 'Reseting Form',\r\n            message: 'Would you like to reset the form?',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n\r\n    static open() {\r\n        const closeConfirmation: IConfirmMeta = {\r\n            ...ConfirmationMetas.delete(),\r\n            id: 'open',\r\n            type: 'open',\r\n            title: 'Openning',\r\n            message: 'Would you like to open it?',\r\n        };\r\n        return closeConfirmation;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ConfirmComponent } from './confirm/confirm.component';\n\n\n\n@NgModule({\n  declarations: [\n    ConfirmComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [\n    ConfirmComponent\n  ]\n})\nexport class TconfirmationModule { }\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { IConfirmMeta, ConfirmationMetas, IConfirmationResult } from '@shared/tconfirmation/confirm/confirm.interfaces';\n\n@Component({\n  selector: 'app-modal-wrapper',\n  templateUrl: './modal-wrapper.component.html',\n  styleUrls: ['./modal-wrapper.component.scss']\n})\nexport class ModalWrapperComponent implements OnInit {\n\n  @Input() bgColor = 'Secondary';\n  @Input() textColor = 'white';\n  @Input() title = 'No Title (bgColor? textColor? title?)';\n  @Output() confirmEvent = new EventEmitter();\n\n\n  confirmationMetas: IConfirmMeta[] = ConfirmationMetas.all();\n\n\n  ngOnInit(): void {\n  }\n\n  closeOutlet() {\n\n  }\n\n  confirm(event: IConfirmationResult) {\n    this.confirmEvent.emit(event);\n  }\n\n\n}\n","<div class=\"modal-wrapper pt-5\">\n    <div class=\"row col-md-12 pt-5\">\n        <div class=\"col-md-4\"></div>\n        <div class=\"col-md-4 pt-5\">\n            <div class=\"card\">\n                <div class=\"card-header bg-{{bgColor}} d-flex flex-row justify-content-between\">\n                    <h3 class=\"card-title text-{{textColor}}\">{{title}}</h3>\n\n                    <button type=\"button\" class=\"btn\" data-toggle=\"modal\" data-target=\"#close\">\n                        <i class=\"fa fa-times-circle text-{{textColor}}\"></i>\n                    </button>\n                </div>\n                <div class=\"card-body\">\n\n                    <!-- Confirmation Modals... -->\n                    <app-confirm [meta]=\"cm\" (response)=\"confirm($event)\"\n                        *ngFor=\"let cm of confirmationMetas\">\n                    </app-confirm>\n\n\n                    <ng-content> </ng-content>\n\n                </div>\n            </div>\n        </div>\n        <div class=\"col-md-4\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModalWrapperComponent } from './modal-wrapper/modal-wrapper.component';\nimport { TconfirmationModule } from '@shared/tconfirmation/tconfirmation.module';\n\n\n\n@NgModule({\n  declarations: [ModalWrapperComponent],\n  imports: [\n    CommonModule,\n    TconfirmationModule\n  ],\n  exports: [\n    ModalWrapperComponent\n  ]\n})\nexport class TmodalModule { }\n"]}