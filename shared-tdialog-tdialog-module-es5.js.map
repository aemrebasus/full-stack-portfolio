{"version":3,"sources":["webpack:///src/pma-app/shared/tdialog/dialog/dialog.component.ts","webpack:///src/pma-app/shared/tdialog/dialog/dialog.component.html","webpack:///src/pma-app/shared/tdialog/tdialog.module.ts"],"names":["DialogComponent","route","router","name","form","data","subscribe","config","resolved","addControl","event","status","type","onSubmit","navigate","events","submit","paylaod","value","err","submitLabel","split","toLowerCase","meta","bgColor","textColor","title","confirm","selector","templateUrl","styleUrls","TdialogModule","forChild","path","component","declarations","imports","exports"],"mappings":"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","file":"shared-tdialog-tdialog-module-es5.js","sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { FormGroup, FormControl } from '@angular/forms';\nimport { IConfirmationResult } from '@shared/tconfirmation/confirm/confirm.interfaces';\n\n@Component({\n  selector: 'app-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.scss']\n})\nexport class DialogComponent implements OnInit {\n\n  readonly name = 'name';\n\n  @Input() config: any;\n\n\n  form: FormGroup = new FormGroup({});\n\n\n\n  constructor(private route: ActivatedRoute, private router: Router) { }\n\n\n  ngOnInit(): void {\n\n    this.route.data.subscribe(data => {\n\n      this.config = data.resolved;\n      this.form.addControl(this.name, new FormControl(''));\n\n    });\n\n  }\n\n\n  confirm(event: IConfirmationResult) {\n\n    /**\n     * THis component is used only for opening a project (for now)\n     * only open-event consumed!\n     */\n\n    if (event.status) {\n      if (event.type === 'open') {\n\n        this.onSubmit(event);\n\n      } else if (event.type === 'close') {\n\n        this.router.navigate(['/pma']);\n\n      } else if (event.type === 'delete') {\n\n        this.onSubmit(event);\n\n      }\n    }\n  }\n\n\n  onSubmit(event: IConfirmationResult) {\n    try {\n\n      this.config.events.submit({\n        type: 'submit',\n        paylaod: this.form.value\n      });\n\n    } catch (err) {\n\n    } finally {\n\n      this.router.navigate(['/pma']);\n\n    }\n  }\n\n\n  submitType() {\n    return `#${this.submitLabel().split(' ')[0].toLowerCase()}`;\n  }\n\n  meta() {\n    return this.config.meta;\n  }\n\n  submitLabel() {\n    return this.config.meta.submitLabel;\n  }\n  bgColor() {\n    return this.meta().bgColor;\n  }\n\n  textColor() {\n    return this.meta().textColor;\n  }\n\n  title() {\n    return this.meta().title;\n  }\n\n  data() {\n    return this.config.data;\n  }\n\n\n}\n\n\n","<app-modal-wrapper [bgColor]=\"bgColor()\" [title]=\"title() | titlecase\" [textColor]=\"textColor()\"\n    (confirmEvent)=\"confirm($event)\">\n\n    <form [formGroup]=\"form\">\n\n        <div class=\"form-group\">\n            <input [formControlName]=\"name\" type=\"text\" [id]=\"name\" class=\"form-control\" list=\"data\" placeholder=\"....\"\n                required />\n            <datalist id=\"data\">\n                <option *ngFor=\"let o of data()\" [value]=\"o.name | titlecase\"></option>\n            </datalist>\n        </div>\n\n        <button class=\"btn btn-{{bgColor()}} mr-2\" type=\"button\" *ngIf=\"form.valid && form.dirty\" data-toggle=\"modal\"\n            [attr.data-target]=\"submitType()\"> {{submitLabel()}} </button>\n    </form>\n\n</app-modal-wrapper>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DialogComponent } from './dialog/dialog.component';\nimport { RouterModule } from '@angular/router';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { TmodalModule } from '@shared/tmodal/tmodal.module';\n\n\n\n@NgModule({\n  declarations: [DialogComponent],\n  imports: [\n    CommonModule,\n    TmodalModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule.forChild([{ path: '', component: DialogComponent }])\n  ],\n  exports: [\n    DialogComponent\n  ]\n})\nexport class TdialogModule { }\n"]}